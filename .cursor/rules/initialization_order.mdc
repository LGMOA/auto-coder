---
description: 
globs: 
alwaysApply: true
---
# Demo和测试代码中的组件初始化顺序规则

在实现demo或者单元测试时，尤其是对于LongContextRAG等基于检索增强生成的组件，必须严格遵循特定的初始化顺序，避免FileMonitor、token计数器等组件出现冲突或错误初始化。

## 关键初始化顺序

1. **首先初始化FileMonitor**：必须首先初始化文件监控系统，并指定正确的监控目录
2. **然后获取rules**：从项目目录加载规则文件
3. **接着加载tokenizer**：tokenizer的加载必须在前两步完成后进行
4. **再初始化LLM**：获取语言模型客户端
5. **最后初始化RAG组件**：使用上述组件初始化RAG相关类

## 标准初始化代码示例

参考[examples/demo_long_context_rag.py](mdc:examples/demo_long_context_rag.py)中的初始化部分：

```python
# 1. 初始化FileMonitor（必须最先进行）
try:
    from autocoder.common.file_monitor.monitor import FileMonitor
    monitor = FileMonitor(args.source_dir)  # 使用项目根目录
    if not monitor.is_running():
        monitor.start()
        logger.info(f"文件监控已启动: {args.source_dir}")
    else:
        logger.info(f"文件监控已在运行中: {monitor.root_dir}")
    
    # 2. 加载规则文件
    from autocoder.common.rulefiles.autocoderrules_utils import get_rules
    _ = get_rules(args.source_dir)
except Exception as e:
    logger.error(f"初始化文件监控出错: {e}")

# 3. 加载tokenizer (必须在前两步之后)
from autocoder.auto_coder_runner import load_tokenizer
load_tokenizer()    

# 4. 初始化LLM
llm = get_single_llm("v3_chat", product_mode="lite")

# 5. 初始化RAG组件
rag = LongContextRAG(
    llm=llm,
    args=args,
    path=args.source_dir,
    tokenizer_path=None  # 使用默认tokenizer
)
```

## 初始化顺序说明

1. **FileMonitor初始化优先级**：
   - `auto_coder_runner`模块会自动触发FileMonitor初始化
   - 如果不提前手动初始化，会以运行目录作为监控目录，可能导致错误
   - 因此必须在调用`load_tokenizer()`前手动初始化FileMonitor

2. **规则加载次序**：
   - `get_rules()`应在FileMonitor初始化后立即调用
   - 确保规则加载使用正确的项目根目录

3. **Tokenizer加载时机**：
   - 必须在前两步完成后加载，因为`load_tokenizer()`会隐式引用FileMonitor
   - 如果顺序错误，可能导致Tokenizer使用错误的监控目录

## 错误初始化示例与问题

```python
# 错误示例：直接加载tokenizer
from autocoder.auto_coder_runner import load_tokenizer
load_tokenizer()  # 错误！这会使用当前运行目录初始化FileMonitor

# 获取LLM
llm = get_single_llm("v3_chat")  # 现在FileMonitor已经以错误目录初始化

# 初始化RAG - 可能与上面的监控目录不一致
rag = LongContextRAG(llm=llm, args=args, path=project_dir)  # 监控目录和RAG目录不一致！
```

此错误初始化会导致:
- 文件变化监控在错误的目录进行
- 规则文件从错误位置加载
- RAG和文件监控使用不同的目录，产生不一致行为
